name: Update Version, Create Branch, and Tag

on:
  push:
    branches:
      - main

jobs:
  update-version-create-branch-and-tag:
    name: Update Version, Create Branch, and Tag
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get the current tag
      id: get_current_tag
      run: |
        CURRENT_TAG=$(git describe --tags --abbrev=0)
        echo "Current tag is $CURRENT_TAG"
        echo "::set-output name=CURRENT_TAG::$CURRENT_TAG"

    - name: Increment the version
      id: increment_version
      run: |
        # Get the current tag from the previous step's output
        CURRENT_TAG=${{ steps.get_current_tag.outputs.CURRENT_TAG }}
        # Increment the version by splitting the components and increasing the Build number
        IFS='.' read -ra PARTS <<< "$CURRENT_TAG"
        MAJOR=${PARTS[0]}
        MINOR=${PARTS[1]}
        BUILD=$(( ${PARTS[2]} + 1 ))
        NEW_VERSION="${MAJOR}.${MINOR}.${BUILD}"
        echo "New version is $NEW_VERSION"
        echo "::set-output name=NEW_VERSION::$NEW_VERSION"

    - name: Create and push the new branch
      id: create_and_push_branch
      run: |
        # Get the updated version from the previous step's output
        NEW_VERSION=${{ steps.increment_version.outputs.NEW_VERSION }}
        git checkout -b "release/$NEW_VERSION"
        git push origin "release/$NEW_VERSION"

    - name: Update Package Version and Checksum
      run: |
        # Get the updated version from the previous step's output
        NEW_VERSION=${{ steps.increment_version.outputs.NEW_VERSION }}
        NEW_CHECKSUM="new_checksum_value"

        sed -i '' "s/let version = \".*\"/let version = \"${NEW_VERSION}\"/" Package.swift
        sed -i '' "s/checksum: \".*\"/checksum: \"${NEW_CHECKSUM}\"/" Package.swift

        # Commit the changes
        git config --global user.name 'Your Name'
        git config --global user.email 'youremail@example.com'
        git commit -am "Update version and checksum"
        git push

    - name: Merge branch with master
      run: |
        # Get the updated version from the previous step's output
        NEW_VERSION=${{ steps.increment_version.outputs.NEW_VERSION }}
        git fetch
        git checkout master
        git merge "release/$NEW_VERSION"
        git push

    - name: Create Tag
      id: create_tag
      run: |
        # Get the updated version from the previous step's output
        NEW_VERSION=${{ steps.increment_version.outputs.NEW_VERSION }}
        echo "Creating tag $NEW_VERSION"
        git tag $NEW_VERSION
        git push origin $NEW_VERSION
        echo "::set-output name=TAG::$NEW_VERSION"

    - name: Set Output
      id: set_output
      run: |
        # Get the updated tag from the previous step's output
        NEW_TAG=${{ steps.create_tag.outputs.TAG }}
        echo "New tag is $NEW_TAG"
        echo "::set-output name=TAG::$NEW_TAG"
